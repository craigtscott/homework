c
@cache
s
@cache.delete(0)
s
c
s
c
s
c
s
display count < @max
s
display @max
display count
dispaly at
at
al
display at = el_include(el)
exit
load 'LRUcache.rb'
load 'LRUcache.rb
  johnny_cache.add(5)
  johnny_cache.add(4)
  johnny_cache.add(3)
  johnny_cache.add(2)
  johnny_cache.add(1)
  johnny_cache.count
johnny_cache = LRUCache.new(4)
  johnny_cache.count
  johnny_cache.show
display count < @max
c
  johnny_cache.showc
  johnny_cache.add({a: 1, b: 2, c: 3})
  johnny_cache.add("I walk the line")
  johnny_cache.add(:ring_of_fire)
  johnny_cache.add("I walk the line")
  johnny_cache.add([1,2,3,4])
  johnny_cache.add({a: 1, b: 2, c: 3})
  johnny_cache.add(-5)
  johnny_cache.add(5)
  johnny_cache.add([1,2,3])
  johnny_cache.count # => returns 2
  johnny_cache.add(5)
c
count
s
el_include(el)
c
  johnny_cache.add(5)
  johnny_cache.add([1,2,3])
  johnny_cache.count # => returns 2
  johnny_cache.add(5)
exit
  johnny_cache.add(-5)
  johnny_cache.add(5)
  johnny_cache.add([1,2,3])
  johnny_cache.count # => returns 2
  johnny_cache.add(5)
